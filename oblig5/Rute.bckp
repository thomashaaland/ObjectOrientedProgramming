abstract class Rute {
    // Koordinater: (kolonne, rad)
    //private int[] koordinater;
    protected int kolonne;
    protected int rad;
    protected Labyrint labyrint;
    protected Rute nord;
    protected Rute syd;
    protected Rute ost;
    protected Rute vest;
    
    public Rute(int kolonne, int rad, Labyrint labyrint) {
	this.kolonne = kolonne;
	this.rad = rad;
	this.labyrint = labyrint;
    }

    public void leggTilNaboer(Rute nord, Rute syd, Rute ost, Rute vest) {
	this.nord = nord;
	this.syd = syd;
	this.ost = ost;
	this.vest = vest;
    }
	
    protected String koordinater() {
	return "(" + kolonne + ", " + rad + ")";
    }

    public void gaa(Rute fra, String rute) {
	if (this.erAapning()) {
	    // Skru på for debugging
	    if (labyrint.utskrift()) {
		System.out.println("Fant åpning: " + koordinater());
	    }
	    rute = rute + koordinater();
	    // Skru på denne for debugging
	    if (labyrint.utskrift()) {
		System.out.println("Ruten du fant var: " + rute);
	    }
	    labyrint.leggTilUtvei(rute);
	}
	else if (!this.erHvit()) {
	    ;
	}
	else {
	    // Turn this on, for debugging
	    if (labyrint.utskrift()) {
		System.out.println(koordinater());
	    }
	    if (!fra.koordinater().equals(nord.koordinater())) nord.gaa(this, rute +
									koordinater() + "-->");
	    
	    if (!fra.koordinater().equals(vest.koordinater())) vest.gaa(this, rute +
									koordinater() + "-->");
	    
	    if (!fra.koordinater().equals(ost.koordinater())) ost.gaa(this, rute +
								      koordinater() + "-->");
	    
	    if (!fra.koordinater().equals(syd.koordinater())) syd.gaa(this, rute +
								      koordinater() + "-->");
	}
    }

    protected abstract boolean erAapning();
    
    protected abstract boolean erHvit();

    public void finnUtvei() {
	gaa(this, "");
    }

    protected abstract char tilTegn();
}
