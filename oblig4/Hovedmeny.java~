import java.util.*;
import java.io.*;


// HOVEDMENY
  public void hovedmeny() {
    int avslutt = 0;
    while (avslutt != 1){
      System.out.println("________________________________________________________________________\n" +
                         "|                                                                      |\n" +
                         "|                                                                      |\n" +
                         "|                       Velkommen til legesystemet                     |\n" +
                         "|                                                                      |\n" +
                         "|                               Hovedmeny:                             |\n" +
                         "|                                                                      |\n" +
                         "|______________________________________________________________________|\n" +
                         "| Skrive ut fullstendig oversikt over pasienter, leger,                |\n" +
                         "| legemidler og resepter:___________________________________________ 1 |\n" +
                         "| Opprette og legge til nye elementer i systemet:___________________ 2 |\n" +
                         "| Bruke en gitt resept fra listen til en pasient:___________________ 3 |\n" +
                         "| Skrive ut forskjellige former for statistikk:_____________________ 4 |\n" +
                         "| Skrive alle data til fil:_________________________________________ 5 |\n" +
                         "| Avslutte programmet_______________________________________________ 6 |\n" +
                         "|______________________________________________________________________|\n");

      Scanner scanner = new Scanner(System.in);
      System.out.println("Tast inn ditt valg, avslutt med enter:");
      int svar = scanner.nextInt();

      //switch med svar som paramenter. Seks ulike caser.
      switch(svar) {

        //skriver ut info om alle elementer i systemet
        case 1:
          //sortert liste med leger
          System.out.println("**************  Informasjon om leger  ******************");
          this.skrivLegeliste();
          //legemidler
          System.out.println("**************  Informasjon om legemidler  *************");
          this.skrivLegemiddelliste();
          //resepter
          System.out.println("**************  Informasjon om resepter  ***************");
          this.skrivReseptliste();
          //pasienter
          System.out.println("**************  Informasjon om pasienter  **************");
          this.skrivPasientliste();
          break;

        //metoder for å opprette og legge til elementer
        case 2:
          // Legge til:
          // Formatering:
          // # Pasienter (navn, fnr)
					// Jens Hans Olsen,11111143521
          leggTilPasient(String line);
          // # Legemidler (navn,type,pris,virkestoff,[styrke])
					// Predizol,narkotisk,450,75,8
          leggTilLegemiddel(String line);
          // # Leger (navn,kontrollid / 0 hvis vanlig lege)
					// Dr. Cox,0
          leggTilLege(String line);
          // # Resepter (legemiddelNummer,legeNavn,pasientID,type,[reit])
					// 1,Dr. Cox,2,hvit,7
          leggTilResept(String line);
          // For resepter:
          // For å hente legemiddelNummer: legemiddel.hentID();
          // For å hente legeNavn: lege.hentNavn();
          // For å hente pasientID: pasient.hentID();

          // For å lete i systemet: (return Pasient/Legemiddel/Lege eller null pointer dersom ikke funnet)
          finnPasient(String navn) || finnPasient(int ID);
          finnLegemiddel(int ID);
          finnLege(String navn);
          break;

        //bruke resept

        case 3:

            // For å finne fram en resept til en pasient:

            // Først finne riktig pasient. Så finn pasient med enten navn eller id.
            // Så iterere gjennom listen
            // Metoden hentReseptListe returnerer reseptliste.
            Stabel<Resept> reseptliste = pasient.hentReseptliste();

          // Først kan bruker enten taste inn integers eller en string, for å søke opp riktig pasient. Først sjekkes det om input er int, string eller en kombinasjon. Hvis det er int eller string, brukes det for å kalle på en av finnPasient-metodene. De har lik signatur bortsett fra at en tar int og en tar string. Hvis ikke riktig pasient blir funnet, returners det til hovedmenyen. Hvis så riktig pasient er funnet, brukes den for å hente reseptliste. Hvis det finnes en reseptliste, kan bruker taste inn hvilken resept som skal brukes, som så brukes.
          boolean input = false;
          Pasient pasient = null;
          String navn = " ";
          int id = 0;
          int forsok = 0;
          while (input && forsok < 3 && funnetRiktigPasient) {
            System.out.println("Skriv inn pasientens navn eller ID:");
            if(scanner.hasNextInt()) {
              id = scanner.nextInt();
              System.out.println("Du tastet inn ID.");
              input = true;
            }
            else if (scanner.hasNextLine()) {
              navn = scanner.nextLine();
              System.out.println("Du har tastet inn navn.");
              input = true;
            }
            else {
            System.out.println("Du har tastet inn ugyldig navn eller ID.");
            forsok ++;
              if (forsok > 3 ) {
                System.out.println("Du har skrevet feil gjentatte ganger. Du blir sendt tilbake til hovedmenyen.");
                hovedmeny();
              }
            }

          //hvis id ikke er 0, betyr det at bruker tastet inn id. Bruker da id for å søke opp pasient.
          boolean funnetRiktigPasient = false;
          int pasientForsok = 0;
          while (funnetRiktigPasient && pasientForsok < 3) {
            if (id != 0) {
              if (finnPasient(id) != null) {
                pasient = finnPasient(id);
                System.out.println("Pasient funnet: " , pasient); //har vi tostring for å skrive ut pasient?
                funnetRiktigPasient = true;
              }
              else {
                System.out.println("Ingen pasient funnet ved den ID-en. Prøv på nytt.");
                pasientForsok ++;
                if (pasientForsok > 3){
                  System.out.println("Du har forsøkt for mange ganger. Du blir sendt tilbake til hovedmenyen.");
                  hovedmeny();
                }
              }
            }
            // hvis id er 0, så har bruker tastet inn string. Søker da på navn.
            else {
              if (finnPasient(navn) != null) {
                pasient = finnPasient(navn);
                System.out.println("Pasient funnet: " , pasient); //har vi tostring for å skrive ut pasient?
                funnetRiktigPasient = true;
              }
              else {
                System.out.println("Ingen pasient funnet ved dette navnet. Prøv på nytt.");
                pasientForsok ++;
                if (pasientForsok > 3){
                  System.out.println("Du har forsøkt for mange ganger. Du blir sendt tilbake til hovedmenyen.");
                  hovedmeny();
                }
              }
            }
          }
          if (pasient.hentReseptListe.size() == 0) {
            System.out.println("Denne pasienten har ingen resepter.");
          }
          else {
            for (Resept resept : pasient.hentReseptListe()) { //usikker på om vi trenger å iterere gjenno listen, hvis metoden allerede har en iterator? Kan vi bare skrive System.out.println(pasient.hentReseptListe()) ?
              System.out.println(resept);
            }
            System.out.println("Tast inn hvilken resept du vil bruke: ");
            Resept resept = scanner.nextInt();
            boolean reseptBrukt = false;
            int reseptForsok = 0;
            while (reseptBruk && reseptForsok < 3){
            try {
              if (resept.bruk() == true) {
                resept.bruk();
                System.out.println("Resept er nå brukt.");
              }
              else if (resept.bruk() == false) {
                System.out.println("Denne resepten er ikke gyldig.");
              }
            }
            catch (UgyldigListeIndeks e) {
              System.out.println("Du har tastet inn et ugyldig indeksnummer i reseptlisten.");
              reseptForsok ++;
              if reseptForsok > 3 { // kan jeg gjøre dette inne i en catch?
                System.out.println("Du har forsøkt for mange ganger. Du blir sendt tilbake til hovedmenyen.");
                hovedmeny();
              }
            }
            }
          }
          break;


        //skrive ut statistikk
        case 4:
          this.skrivStatistikk();
          break;


        //skrive all data til fil
        case 5:
          System.out.print("Hva vil du lagre filen som? Tast inn filnavn.");
          String svar5 = scanner.nextLine();

          // For å lagre data:
          skrivTilFil(svar5);
          break;


        //avslutte programmet
        case 6:
          //ber om input fra bruker om data skal lagres
          System.out.print("Ønsker du å lagre data til fil først? Tast '1' for ja, tast hvilken som helst annen tast for nei.");
          String svar0 = scanner.nextInt();

          //hvis data skal lagres, bes bruker om filnavn
          if (svar0 == 1) {
            System.out.print("Hva vil du lagre filen som? Tast inn filnavn.");
            String svar5 = scanner.nextLine();

            //lagrer data til fil
            skrivTilFil(svar5);
            System.out.println("Takk for nå.")
            avslutt = 1;
          }
          else {
            System.out.println("Takk for nå.")
            avslutt = 1;
            break;
          }


        //hvis ingen av casene slår inn:
        default:
          System.out.println("Du har tastet inn et menyvalg som ikke er gyldig.");



      } // switch
    }
  }
